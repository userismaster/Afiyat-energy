import requests
from django.utils import timezone
from .models import TelegramSettings, Notification

def send_telegram_message(message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞
    """
    try:
        settings = TelegramSettings.objects.filter(enabled=True).first()
        if not settings:
            return False, "Telegram notifications are disabled or not configured"

        url = f"https://api.telegram.org/bot{settings.bot_token}/sendMessage"
        data = {
            "chat_id": settings.chat_id,
            "text": message,
            "parse_mode": "HTML"
        }

        response = requests.post(url, data=data)
        response.raise_for_status()
        return True, None

    except Exception as e:
        return False, str(e)

def create_order_notification(order):
    """
    –°–æ–∑–¥–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
    """
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
    message = f"""
üõçÔ∏è <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}</b>

üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b>
–ò–º—è: {order.first_name} {order.last_name}
–¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}
Email: {order.email}

üì¶ <b>–¢–æ–≤–∞—Ä—ã:</b>
"""
    total = 0
    for item in order.items.all():
        product = item.product
        subtotal = item.quantity * item.price
        total += subtotal
        message += f"- {product.get_name('ru')} x {item.quantity} = {subtotal:,.2f} UZS\n"

    message += f"\nüí∞ <b>–ò—Ç–æ–≥–æ:</b> {total:,.2f} UZS"

    if order.comment:
        message += f"\n\nüí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n{order.comment}"

    # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    notification = Notification.objects.create(
        type='order',
        title=f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}',
        message=message
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    success, error = send_telegram_message(message)
    
    if success:
        notification.sent = True
        notification.sent_at = timezone.now()
    else:
        notification.error = error
    
    notification.save()
    return success, error

def create_message_notification(contact_message):
    """
    –°–æ–∑–¥–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    """
    message = f"""
üì® <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>

üë§ <b>–û—Ç:</b>
–ò–º—è: {contact_message.name}
Email: {contact_message.email}
–¢–µ–ª–µ—Ñ–æ–Ω: {contact_message.phone}

üìù <b>–¢–µ–º–∞:</b> {contact_message.subject}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
{contact_message.message}
"""

    # –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    notification = Notification.objects.create(
        type='message',
        title=f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {contact_message.name}',
        message=message
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    success, error = send_telegram_message(message)
    
    if success:
        notification.sent = True
        notification.sent_at = timezone.now()
    else:
        notification.error = error
    
    notification.save()
    return success, error
