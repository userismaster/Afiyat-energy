// Media queries
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid
@mixin grid($columns: 1, $gap: $spacer) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Transitions
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Typography
@mixin text-style($size, $weight: normal, $line-height: normal) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

// Box shadow
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 4px rgba($black, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 8px rgba($black, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 8px 16px rgba($black, 0.1);
  }
}

// Button styles
@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%)) {
  background-color: $background;
  border-color: $border;
  color: color-contrast($background);

  &:hover {
    background-color: $hover-background;
    border-color: $hover-border;
  }
}
